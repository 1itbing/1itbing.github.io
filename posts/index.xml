<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on IT兵的技术小站</title>
    <link>http://itbing.cn/posts/</link>
    <description>Recent content in Posts on IT兵的技术小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 08 May 2022 15:22:36 +0800</lastBuildDate><atom:link href="http://itbing.cn/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>kubernetes1.24版本开始不再直接支持Docker</title>
      <link>http://itbing.cn/posts/2022/2022-05-08-k8s-docker-remove/</link>
      <pubDate>Sun, 08 May 2022 15:22:36 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2022/2022-05-08-k8s-docker-remove/</guid>
      <description>可以说当年kubernetes是借着Docker的东风才发展状大的。当然，kubernetes本身也的确优秀，毕竟它是google多年先进编排理念积累的成果。
#more
kubernetes当年为了兼容特别火的Docker，开发了&amp;quot;dockershim&amp;quot;来调用Docker的API接口，通过这么一种方式，从它2014年6月7日首次发布用到了2020年12月。
2020年12月2日，kubernetes宣布将docker-shim标识为deprecated（不赞成使用），未来将被remove。（官方文档：https://kubernetes.io/zh-cn/blog/2020/12/02/dont-panic-kubernetes-and-docker/)
2022年5月3日，Kubernetes 1.24发布，dockershim彻底被移除。（官方文档：https://kubernetes.io/zh-cn/blog/2022/05/03/kubernetes-1-24-release-announcement/ ）
这个变化对于其它人其实没啥感觉，因为底层的变化对于k8s整个使用没有任何影响，只是运维人员需要注意。
首先，k8s1.24及之后的版本还是可以继续使用Docker的，只不过现在不直接支持了，需要安装一个cri-dockerd（Docker官方Mirantis开发的，源码https://github.com/Mirantis/cri-dockerd）。 但这种使用docker的方式是不推荐在生产环境中使用了。
现在选择新的容器运行时，可以有两种选择：containerd或者CRI-O。 首推选择containerd，因为它跟docker命令几乎一模一样，只要把命令中的docker改为crictl基本上就可以直接用。很多国内的云服务商也几乎都是用containerd来替代docker。</description>
    </item>
    
    <item>
      <title>让kubectl命令能自动补全</title>
      <link>http://itbing.cn/posts/2022/2022-03-06-k8s-kubectl-auto/</link>
      <pubDate>Sun, 06 Mar 2022 10:42:56 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2022/2022-03-06-k8s-kubectl-auto/</guid>
      <description>kubectl命令一般都挺长的，经常重复输入还挺麻烦的，其实也是可以让它自动补全的。
默认bash包含了自动补全，只要输入命令的前几个字母，再按TAB键，如果这几个字母有很多命令匹配到会全部列出让选择，如果只匹配到一个，就会直接补全命令。 但这种补全一般是只针对命令和文件名。
比如默认情况下输入&amp;quot;kubectl&amp;quot;,这个时候按TAB键，只会匹配出当前目录下的文件，不会列出这个命令的参数。 还比如输入&amp;quot;kubectl -n k&amp;quot;,这个时候按TAB键，并不能匹配出以k开头的命名空间来。
想要让kubectl命令也补全这种信息，就需要安装bash的一个扩展包bash-completion。
Linux下安装和设置： 1、安装bash-completion yum install bash-completion 或者 apt install bash-completion 2、使其生效 source /usr/share/bash-completion/bash_completion source &amp;lt;(kubectl completion bash) 3、添加环境变量(让以后开机就生效） echo &amp;quot;source &amp;lt;(kubectl completion bash)&amp;quot; &amp;gt;&amp;gt; ~/.</description>
    </item>
    
    <item>
      <title>k8s环境的几个替代产品-可用于入门、测试和开发等环境</title>
      <link>http://itbing.cn/posts/2021/2021-12-01-k8s-minikube-k3s/</link>
      <pubDate>Wed, 01 Dec 2021 11:22:36 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2021/2021-12-01-k8s-minikube-k3s/</guid>
      <description>【Minikube】 Minikube是由Kubernetes官方维护的单机版的Kubernetes，支持Kubernetes的大部分功能，从基础的容器编排管理，到高级特性如负载均衡、Ingress，权限控制等。使用最新的官方stable版本。 非常适合作为Kubernetes入门、实验和开发测试环境使用。 支持macOS、Linux和Windows等多平台。
网址：https://minikube.sigs.k8s.io
【k3s】 SUSE(Rancher)公司出品，轻量型k8s。只支持Linux平台。 网址：https://k3s.io
【Rancher Desktop带k3s】 SUSE(Rancher)公司出品，Rancher Desktop带k3s环境。安装快捷方便。 支持macOS、Linux和Windows等多平台。
网址：https://rancherdesktop.io
【Docker Desktop带k8s】 Docker公司出品。 支持macOS、Linux和Windows等多平台。 网址：https://www.</description>
    </item>
    
    <item>
      <title>在Kubernetes中自定义域名解析</title>
      <link>http://itbing.cn/posts/2021/2021-11-16-k8s-coredns/</link>
      <pubDate>Tue, 16 Nov 2021 10:32:26 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2021/2021-11-16-k8s-coredns/</guid>
      <description>有时候需要在k8s容器中给一些主机名做一下域名解析指向某一个IP地址，一般想到的都是在容器中的/etc/hosts添加配置，但这种方法不够智能，修改一次就要重新创建一个镜像，非常麻烦。
这里有两种方便设置的方法：
一种是用hostAliases 在yaml中的spec块中添加一个hostAliases，然后根据格式写上IP地址和想要解析的域名。
....... spec: hostAliases: - ip: &amp;#34;172.11.0.23&amp;#34; hostnames: - pre.itbing.local ...... 这样就会把pre.itbing.local解析到172.11.0.23。 hostAliases的机制是会把这个域名解析添加进容器中的/etc/hosts。</description>
    </item>
    
    <item>
      <title>Kubernetes更新和回滚</title>
      <link>http://itbing.cn/posts/2021/2021-11-15-k8s-record-rollout/</link>
      <pubDate>Mon, 15 Nov 2021 14:12:16 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2021/2021-11-15-k8s-record-rollout/</guid>
      <description>如果对Deployment的Pod template部分进行更改，例如更新template 中的 label 和容器镜像时，就会创建出一个新的 revision版本记录，如果想回滚恢复到以前某个版本状态，可以随时进行操作恢复。
1.先创建一个deploy 这里直接用命令创建一个nginx服务的deploy # kubectl create deploy nginx-deploy --image=nginx:1.19.0 --replicas=2 -n dev</description>
    </item>
    
    <item>
      <title>k8s:configmap/secret存储二进制文件研究</title>
      <link>http://itbing.cn/posts/2021/2021-10-01-k8s-configmap-secret/</link>
      <pubDate>Fri, 01 Oct 2021 10:11:18 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2021/2021-10-01-k8s-configmap-secret/</guid>
      <description>一直以为configmap/secret没办法存储二进制文件，最近有个p12的证书，也类似于二进制文件，用secret存储挂载进容器中，居然可以正常使用。 就想着其它二进制文件应该也可以吧，就拿linux下面的ls命令的文件，用configmap/secret分别存储然后挂载进容器中，也都可以正常使用。
简单的实验步骤： 制作一个configmap，存储文件是ls这个命令文件。
# kubectl create configmap configmap-ls --from-file=/root/ls
注意：要把容器里的ls命令复制到你执行kubectl命令的这个系统上用来configmap存储，因为可能你执行命令的这个系统和容器的系统不一样，你如果用这个系统上的ls命令挂载进去，可能没办法正常使用。
然后在deploy中，制作一个挂载配置，把这个configmap挂载进容器中。
............ volumeMounts: - mountPath: /configmap/ name: configmap-ls .</description>
    </item>
    
    <item>
      <title>rancher导入k8s/k3s集群</title>
      <link>http://itbing.cn/posts/2021/2021-07-07-k8s-rancher-import/</link>
      <pubDate>Wed, 07 Jul 2021 10:12:18 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2021/2021-07-07-k8s-rancher-import/</guid>
      <description>把k8s/k3s集群导入rancher中进行管理，步骤还是很简单的。 rancher本身也是有提示说明的。
1、登录rancher。 点击“集群”，再点击右边的“添加集群”按钮
2、点击右边的“导入”链接 3、设置集群的名称（可随意）。 也可以在这里添加对集群管理的用户（成员角色），不过一般都是在后面细分权限划分。
4、这里会根据你的rancher环境生成相应的命令。到要导入的集群系统上执行这个命令就行。 [root@master1 ~]# kubectl apply -f https://rancher.xxxxxx.net/v3/import/2cp2nlnkjv2l4d9tcwg6lbj72tfmjcxtvrndvhv6kx4tjcwppctnln.yaml clusterrole.rbac.authorization.k8s.io/proxy-clusterrole-kubeapiserver created clusterrolebinding.</description>
    </item>
    
    <item>
      <title>rancher的安装与设置</title>
      <link>http://itbing.cn/posts/2021/2021-07-06-k8s-rancher/</link>
      <pubDate>Tue, 06 Jul 2021 21:12:15 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2021/2021-07-06-k8s-rancher/</guid>
      <description>Docker安装方法： 以前1.x版本，镜像名是rancher/server，现在一般都是用2.x版本，镜像名是rancher/rancher
$ docker pull rancher/rancher
这个会安装最新版本的rancher，如果想指定版本安装，可以先查询有哪些版本，再加上版本号进行安装。
$ curl -s https://registry.hub.docker.com/v2/repositories/rancher/rancher/tags/?page_size=100| jq \&amp;#39;.&amp;#34;results&amp;#34;[] .name\&amp;#39; &amp;#34;v2.7-head&amp;#34; &amp;#34;v2.</description>
    </item>
    
    <item>
      <title>Kubernetes的web管理：dashboard的安装</title>
      <link>http://itbing.cn/posts/2021/2021-05-10-k8s-dashboard/</link>
      <pubDate>Mon, 10 May 2021 16:25:29 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2021/2021-05-10-k8s-dashboard/</guid>
      <description>k8s在使用时，不仅是运维人员需要使用，很多时候还需要给开发人员来使用。 给开发人员使用，就不可能让他们用命令行去使用，这个时候就需要有web页面这种管理方式。 k8s的web管理方式其实不只有dashboard这一种，还有很多其它的解决方案，比如Rancher，其实就比dashboard更好用。
一、查询kubernetes版本，下载对应的dashboard版本 安装前要先确认自己的kubernetes版本，因为dashboard要对应不同的kubernetes版本来进行安装使用，如果版本不对应，安装完打开可能会报错。
# kubectl version Client Version: version.Info{Major:&amp;amp;quot;1&amp;amp;quot;, Minor:&amp;amp;quot;19&amp;amp;quot;, GitVersion:&amp;amp;quot;v1.19.0&amp;amp;quot;, GitCommit:&amp;amp;quot;e19964183377d0ec2052d1f1fa930c4d7575bd50&amp;amp;quot;, GitTreeState:&amp;amp;quot;clean&amp;amp;quot;, BuildDate:&amp;amp;quot;2020-08-26T14:30:33Z&amp;amp;quot;, GoVersion:&amp;amp;quot;go1.</description>
    </item>
    
    <item>
      <title>Kubernetes的安装部署</title>
      <link>http://itbing.cn/posts/2021/2021-03-20-k8s-setup/</link>
      <pubDate>Sat, 20 Mar 2021 20:17:18 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2021/2021-03-20-k8s-setup/</guid>
      <description>Kubernetes的安装方法主要有两种： 一种是用源码编译安装 一种是使用kubeadm工具安装 用源码安装的话，相对比较麻烦，初学者应该先用kubeadm来安装部署k8s，等熟悉了再用源码来安装。</description>
    </item>
    
    <item>
      <title>Kubernetes的一些名词概念</title>
      <link>http://itbing.cn/posts/2021/2021-03-20-k8s-name/</link>
      <pubDate>Sat, 20 Mar 2021 11:12:16 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2021/2021-03-20-k8s-name/</guid>
      <description>master： k8s集群中的管理节点，一般生产中是有三个master的，达到冗余的效果。
node(worker)： k8s集群中的工作节点，就是各种服务实际部署的系统。根据自己的服务数量，可以有很多个。
pod： k8s集群管理的最小单位。k8s不会直接管理docker容器，而是通过pod去管理容器，所以k8s不关心底层用的是什么容器技术。</description>
    </item>
    
    <item>
      <title>Kubernetes管理资源的两种方式</title>
      <link>http://itbing.cn/posts/2021/2021-03-19-k8s-manage/</link>
      <pubDate>Fri, 19 Mar 2021 21:07:25 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2021/2021-03-19-k8s-manage/</guid>
      <description>Kubernetes管理资源的两种方式: 1、用纯命令管理 比如用命令创建一个nginx服务，并且设置2个pod负载
# kubectl run nginx-deployment --image=nginx:1.7.9 --replicas=2
比如用命令更新服务的image镜像版本 # kubectl set image deploy/nginx nginx:nginx:1.</description>
    </item>
    
    <item>
      <title>linux上用kvm快速创建虚拟机</title>
      <link>http://itbing.cn/posts/2020/2020-08-19-linux-kvm-setup/</link>
      <pubDate>Wed, 19 Aug 2020 21:07:25 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2020/2020-08-19-linux-kvm-setup/</guid>
      <description>教大家怎么快速的来使用KVM创建一个虚拟机和管理虚拟机，如果有准备好ISO系统安装文件的话，就算是第一次使用KVM，只要跟着操作，也可以很快能创建出一个虚拟机了。
一、查看系统是否支持KVM虚拟化 查看cpu是否支持虚拟化
# grep -E&amp;#39;(vmx|svm)&amp;#39; /proc/cpuinfo flags :fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflushdts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tscart arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperfeagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnttsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch epbinvpcid_single intel_pt ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority eptvpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx rdseed adx smapclflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notifyhwp_act_window hwp_epp md_clear spec_ctrl intel_stibp flush_l1d 说明CPU是Intel的，如果是AMD的CPU，应该是“svm”。</description>
    </item>
    
    <item>
      <title>MySQL报错Ignoring query to other database的真正原因</title>
      <link>http://itbing.cn/posts/2020/2020-07-15-mysql-ignoring-query/</link>
      <pubDate>Wed, 15 Jul 2020 15:31:35 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2020/2020-07-15-mysql-ignoring-query/</guid>
      <description>大家都知道报这个错的原因是忘了用户名前加-u这个参数造成的，比如是这样登录了MySQL
mysql -root -p (注意看，-root前面没有加u） 登录后，不管你执行什么命令，都会提示Ignoring query to other database
mysql&amp;gt;show databases; Ignoring query to other database 要解决这个问题，只要退出后加上-u这个参数就可以了。 # mysql -uroot -p</description>
    </item>
    
    <item>
      <title>Linux上自动挂载磁盘的几种方法</title>
      <link>http://itbing.cn/posts/2020/2020-06-11-linux-autofs/</link>
      <pubDate>Thu, 11 Jun 2020 10:30:35 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2020/2020-06-11-linux-autofs/</guid>
      <description>一、前言 我们添加磁盘后，一般都想让磁盘在重启系统后能自动挂载。 自动挂载的方法有好几种，可根据实际情况来使用，各有各的优势，也有一些需要注意的地方。
二、写进fstab 把磁盘挂载信息写进fstab文件中，一般是最先想到的方法。 只要把正确的格式写入进/etc/fstab文件中，这个磁盘就会在开机时自动挂载。
fstab文件中的格式： 磁盘路径 挂载的目录 磁盘格式 挂载的参数 是否允许备份 开机是否fsck检测磁盘
一般我们最常用的配置类似这样： /dev/vg01/lv00 /mnt xfs defaults 0 0</description>
    </item>
    
    <item>
      <title>在Linux系统上启用Telnet服务</title>
      <link>http://itbing.cn/posts/2020/2020-05-21-linux-telnet-server/</link>
      <pubDate>Thu, 21 May 2020 11:50:46 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2020/2020-05-21-linux-telnet-server/</guid>
      <description>一、前言 Telnet是一个用来远程连接服务器或者设备执行操作的一个服务。但是由于是使用明文传输，现在基本上已经弃用了。 为什么我这里还要讲这个安装呢？主要是有时候在Linux系统做升级OpenSSH时，为了保险起见，一般都需要先启用Telnet服务，以防止由于OpenSSH升级失败而登录不上服务器或者设备。 由于Telnet服务在CentOS6和CentOS7上安装和配置方法都不一样，所以需要分开来写。
二、在CentOS6上的安装及启用 2.1 安装telnet-server 在CentOS6中，telnet服务是由xinetd管理的，没有单独的服务，所以需要一起安装xinetd才行。 注意，在Linux系统中，telnet服务相对应的软件名称是telnet-server，而不是telnet，telnet这个名称只是telnet服务的客户端。
# yum install xinetd telnet-server
执行 chkconfig &amp;ndash;list，在最后一段会显示由xinetd管理的一些服务。</description>
    </item>
    
    <item>
      <title>Docker上传镜像保存</title>
      <link>http://itbing.cn/posts/2019/2019-09-24-docker-images-upload/</link>
      <pubDate>Tue, 24 Sep 2019 20:58:46 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-09-24-docker-images-upload/</guid>
      <description>当我们制作好了一个满意的镜像后，想保存下来以后随时随地使用，就需要有一个库来保存。
保存库主要有三种方式： 1、直接把制作好的镜像上传到Docker hub官方 2、上传到国内一些有提供私有库保存的网站，如阿里云 3、自己创建一个私有库来保存
如果是公司用，还是自己创建私有库来保存。 如果是个人，镜像不多，可以上传到Docker国内一些网站上保存。</description>
    </item>
    
    <item>
      <title>通过实例讲解Docker：Dockerfile构建镜像创建Nginx服务</title>
      <link>http://itbing.cn/posts/2019/2019-09-24-dockerfile-nginx/</link>
      <pubDate>Tue, 24 Sep 2019 20:49:30 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-09-24-dockerfile-nginx/</guid>
      <description>前一篇文章讲了用Docker普通方法创建Tomcat服务，大家对Docker容器已经有了一定的认识。 Docker更好的地方是可以完全定制化自己的镜像和容器。
我们可以通过创建Dockerfile文件定制化自己的镜像。 Dockerfile文件支持的指令大概有十三个： FROM MAINTAINER RUN CMD EXPOSE ENV ADD COPY ENTRYPOINT VOLUME USER WORKDIR</description>
    </item>
    
    <item>
      <title>通过实例讲解Docker：在Docker中搭建Tomcat应用</title>
      <link>http://itbing.cn/posts/2019/2019-09-24-docker-tomcat/</link>
      <pubDate>Tue, 24 Sep 2019 20:48:49 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-09-24-docker-tomcat/</guid>
      <description>概述 在CentOS7上安装好Docker,只是一个开始，后面的路还很长。
安装完就要开始用起来，现在我们就通过几个实例来简单讲一下Docker的应用，让大家有个直观的认识。 要在容器中运行程序或应用，有两种方法： 一种是直接使用别人制作好的镜像，直接下载过来使用就可以； 一种是使用Dockerfile文件自己制作镜像。（但也是在一个基础镜像上制作）
一、在容器中运行Tomcat 先查询Docker官网上有提供哪些Tomcat版本
# docker search tomcat NAME DESCRIPTION STARS OFFICIAL AUTOMATED tomcat Apache Tomcat is an open source implementati¡­ 2523 [OK] tomee Apache TomEE is an all-Apache Java EE certif¡­ 67 [OK] dordoka/tomcat Ubuntu 14.</description>
    </item>
    
    <item>
      <title>在 CentOS 7上安装 Docker及Docker的基本操作</title>
      <link>http://itbing.cn/posts/2019/2019-09-12-centos7-docker-setup/</link>
      <pubDate>Thu, 12 Sep 2019 17:10:15 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-09-12-centos7-docker-setup/</guid>
      <description>前面有一篇讲了 在 CentOS 6上安装 docker-io/docker-engine
CentOS6上虽然还可以安装Docker，但是不推荐在CentOS6上进行安装，CentOS6也没办法安装最新版本的docker-ce版本。 如果要学习和在生产中使用Docker，推荐在CentOS7上安装docker-ce版本。
一、在CentOS7上安装docker-ce 在CentOS7上安装Docker还是比较简单的。
CentOS本身就有提供一个docker版本可以安装，但版本较旧，不推荐使用。
# yum list|grep docker docker.x86_64 1.</description>
    </item>
    
    <item>
      <title>在 centos6上安装docker io/docker-engine</title>
      <link>http://itbing.cn/posts/2019/2019-09-11-centos6-docker-io-docker-engine/</link>
      <pubDate>Wed, 11 Sep 2019 14:35:49 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-09-11-centos6-docker-io-docker-engine/</guid>
      <description>一、说明 先说一下，现在要安装Docker的话，一定要在CentOS7上安装Docker-ce。docker-io是比较老的版本，很多功能是没有的。 CentOS6默认也只支持到Docker1.7（但其实CentOS6是可以支持到Docker1.9的）,后面的版本都需要安装在CentOS7上。 CentOS6也不能安装Docker0.7以下的版本了，比如Docker0.5/0.6,基本上是没办法使用的。因为最早Docker是在Ubuntu上的。
CentOS6安装Docker必须要升级内核到3.10及以上内核版本才行，内核还必须开启aufs模块。
我这里也就是单纯做个研究，就讲一下怎么在CentOS6上升级内核，然后再安装Docker1.7,再升级到1.9。
二、操作系统环境 # cat /etc/issue CentOS release 6.5 (Final) # uname -r 2.</description>
    </item>
    
    <item>
      <title>Docker版本的发展历史</title>
      <link>http://itbing.cn/posts/2019/2019-09-11-docker-history/</link>
      <pubDate>Wed, 11 Sep 2019 14:33:12 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-09-11-docker-history/</guid>
      <description>开始学习Docker的时候，被它的版本搞的有点晕，然后就去研究了一下，查阅了大量的资料，终于搞清楚了这些版本的关系。
Docker 最初是由dotCloud公司创始人Solomon Hykes发起的一个公司内部项目。
在2013年底，由于Docker的火爆，dotCloud公司改名为Docker。
Docker最早是在Ubuntu 12.04上开发实现的； Red Hat则从 RHEL6.5 开始对Docker进行支持。
多种docker版本的混乱情况 先讲一讲为什么会有docker.io,docker-io这种的命名方式。 在Docker技术出现之前，Linux是已经有一个docker的工具的，但此docker非彼Docker。</description>
    </item>
    
    <item>
      <title>Jenkins常用插件</title>
      <link>http://itbing.cn/posts/2019/2019-09-07-jenkins-plugins/</link>
      <pubDate>Sat, 07 Sep 2019 21:01:42 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-09-07-jenkins-plugins/</guid>
      <description>Pipeline Pipeline Maven Integration pipeline中使用withMaven语法必须安装的插件
Credentials Binding 凭据插件
HTTP Request Plugin 代替curl，curl也可以调用凭据的
Image Tag Parameter 通过harbor获取镜像列表作为参数</description>
    </item>
    
    <item>
      <title>ansible升级到2.8之后的问题</title>
      <link>http://itbing.cn/posts/2019/2019-06-19-ansible-28/</link>
      <pubDate>Wed, 19 Jun 2019 23:49:24 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-06-19-ansible-28/</guid>
      <description>以前一直使用ansible1.9的版本，最近升级到2.8版本了，发现有挺多问题的。
1、没有了-S -R参数 以前要使用su切换的话，使用-S -R就可以切换 #ansible test -S -R root -m shell -a &#39;ls&#39;
升级到2.8之后，可以使用如下命令： 一是指定用户 #ansible test &amp;ndash;become-user=root -m shell -a &amp;rsquo;ls&#39;\</description>
    </item>
    
    <item>
      <title>代码重构优化-不要用过多的if嵌套</title>
      <link>http://itbing.cn/posts/2019/2019-06-01-coding-too-many-if/</link>
      <pubDate>Sat, 01 Jun 2019 10:41:24 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-06-01-coding-too-many-if/</guid>
      <description>不要用过多的if嵌套
重构前：
def project_version(request,group_name,branch_name,project_name): if branch_name and group_name and project_name: project_name_with_namespace = &amp;#39;%s/%s&amp;#39; %(group_name,project_name) project = gl.</description>
    </item>
    
    <item>
      <title>go语言的fmt一些打印输出函数之间的区别：Print、Println、Printf、Sprint、Fprint</title>
      <link>http://itbing.cn/posts/2019/2019-05-14-golang-print/</link>
      <pubDate>Tue, 14 May 2019 14:11:13 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-05-14-golang-print/</guid>
      <description>Print：不带格式的最基础的输出函数 a := &amp;#34;a&amp;#34; b := &amp;#34;b&amp;#34; fmt.Print(a) fmt.Print(b) 输出：ab
Println：带一个换行效果的输出函数 a := &amp;#34;a&amp;#34; b := &amp;#34;b&amp;#34; fmt.</description>
    </item>
    
    <item>
      <title>go module</title>
      <link>http://itbing.cn/posts/2019/2019-05-01-golang-gomodule/</link>
      <pubDate>Wed, 01 May 2019 19:12:13 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-05-01-golang-gomodule/</guid>
      <description>go module是Go1.11版本之后官方推出的版本管理工具，并且从Go1.13版本开始，go module将是Go语言默认的依赖管理工具。
go module有三个可选值：off、on、auto。 GO111MODULE=off 禁用模块支持，编译时会从GOPATH和vendor文件夹中查找包。 GO111MODULE=on 启用模块支持，编译时会忽略GOPATH和vendor文件夹，只根据 go.mod下载依赖。 GO111MODULE=auto，项目根目录有go.mod文件时，开启模块支持。 使用 go module 管理依赖后会在项目根目录下生成两个文件go.mod和go.sum。</description>
    </item>
    
    <item>
      <title>Go中引号的不同作用：单引号、双引号、反引号</title>
      <link>http://itbing.cn/posts/2019/2019-04-07-golang-quote/</link>
      <pubDate>Sun, 07 Apr 2019 20:02:42 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-04-07-golang-quote/</guid>
      <description>1、双引号“ ” 最常用的符号，常用来定义字符串。 双引号中定义的字符串支持转义字符，比如\n将输出换行。
package main import ( &amp;#34;fmt&amp;#34; ) func main() { a := &amp;#34;i&amp;#34; b := &amp;#34;在\\n&amp;#34; c := &amp;#34;这里&amp;#34; fmt.</description>
    </item>
    
    <item>
      <title>GO语言的GOROOT和GOPATH</title>
      <link>http://itbing.cn/posts/2019/2019-03-27-golang-goroot-gopath/</link>
      <pubDate>Wed, 27 Mar 2019 19:42:24 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-03-27-golang-goroot-gopath/</guid>
      <description>GOROOT #Golang安装目录
GOPATH #Golang项目目录
GOPATH： src #存放源码，开发项目存放在这个目录下 bin #编译后生成的可执行文件存放目录 pkg #第三方包目录
Go1.11版本之后官方推出go module版本管理工具，并且从Go1.13版本开始，go module将是Go语言默认的依赖管理工具。 所以后面开发项目文件就可以不用在GOPATH中的src中了。</description>
    </item>
    
    <item>
      <title>Go的程序：运行和编译</title>
      <link>http://itbing.cn/posts/2019/2019-03-18-golang-build/</link>
      <pubDate>Mon, 18 Mar 2019 20:41:13 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-03-18-golang-build/</guid>
      <description>package main import ( &amp;#34;fmt&amp;#34; ) func main() { fmt.Println(&amp;#34;&amp;#34;Hello,world!) } package 包名:必须项。 如果是要编译执行的程序，那么一定要有一个main包和main函数。
import 库名：可选项。导入多个项包库就用（）包起来。</description>
    </item>
    
    <item>
      <title>Go设置代理，加速库的下载</title>
      <link>http://itbing.cn/posts/2019/2019-03-18-golang-goproxymd/</link>
      <pubDate>Mon, 18 Mar 2019 19:40:53 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2019/2019-03-18-golang-goproxymd/</guid>
      <description>由于很多go库很多是国外网站，所以要么下载库会很慢，或者干脆访问不了。 Golang V1.13之后支持通过设置变量GOPROXY来修改代理地址，默认的代理服务器可以改成国内地址https://goproxy.cn
go env -w GOPROXY=&amp;ldquo;https://goproxy.cn,direct&amp;rdquo;
阿里云 https://mirrors.aliyun.com/goproxy/
nexus社区提供的 https://gonexus.dev ngoproxy.io https://goproxy.io\
基于athens的公共服务 https://athens.azurefd.net\</description>
    </item>
    
    <item>
      <title>sendEmail的安装</title>
      <link>http://itbing.cn/posts/2018/2018-10-18-linux-sendemail/</link>
      <pubDate>Thu, 18 Oct 2018 21:12:46 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2018/2018-10-18-linux-sendemail/</guid>
      <description>注意，这款软件不是sendmail，而是另外一个简单的命令行的邮件发送工具，生产上常用它来发送告警邮件。 这款软件的安装方式就是Linux下最简单的一种软件安装方法：直接下载赋权即可使用。
下载： 打开网站http://caspian.dotconf.net/menu/Software/SendEmail/
可以右键，复制链接地址，使用wget下载 #wget http://caspian.dotconf.net/menu/Software/SendEmail/sendEmail-v1.56.tar.gz
解压：
#tar -zxvf sendEmail-v1.56.tar.gz #cd sendEmail-v1.56 把里面的主要程序复制到环境变量目录下，即可使用 #cp sendEmail /usr/bin/</description>
    </item>
    
    <item>
      <title>Linux运维常用的一些网站</title>
      <link>http://itbing.cn/posts/2018/2018-08-12-linux-site/</link>
      <pubDate>Sun, 12 Aug 2018 15:59:08 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2018/2018-08-12-linux-site/</guid>
      <description>一、技术问答网站 https://stackoverflow.com https://www.linuxquestions.org
二、软件下载站： 2.1 Linux软件包下载 http://pkgs.org 各种开源的Linux(CentOS/Debian/Ubuntu)系统软件基本都有下载
2.2 rpm包软件的下载站 http://rpmfind.net/ http://rpm.pbone.net
2.3 主要是SUSE下的软件 https://software.opensuse.org/package/dstat 注意下拉查看显示其它版本</description>
    </item>
    
    <item>
      <title>生产上Linux系统投入使用前需要做的基本配置</title>
      <link>http://itbing.cn/posts/2018/2018-07-13-linux-base-set/</link>
      <pubDate>Fri, 13 Jul 2018 17:07:51 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2018/2018-07-13-linux-base-set/</guid>
      <description>平时在管理系统时，总有一些不人性化的地方，也有很多不方便管理的地方，我们可以通过修改一些系统配置来使我们管理系统更方便。
一、系统优化 1.1 命令实时记录 编辑/etc/bashrc，添加以下两句：
shopt -s histappend PROMPT_COMMAND=&amp;#39;history -a&amp;#39; 1.2 给历史命令加上执行时间 编辑/etc/profile文件，加入如下一行： export HISTTIMEFORMAT=&#39;%F %T &#39;</description>
    </item>
    
    <item>
      <title>Linux运维生产上必须要掌握的一些配置操作</title>
      <link>http://itbing.cn/posts/2018/2018-07-01-linux-base-operate/</link>
      <pubDate>Sun, 01 Jul 2018 23:14:58 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2018/2018-07-01-linux-base-operate/</guid>
      <description>一、必须要熟练掌握的操作 1.1 忘记root密码（进入单用户模式） 1.2 进急救模式 1.3 配置IP地址 1.4 配置主机名 1.5 扫描磁盘、磁盘分区、挂载分区 1.6 LVM卷组管理 1.7 分区的扩展和收缩 1.</description>
    </item>
    
    <item>
      <title>Linux系统上软件的安装</title>
      <link>http://itbing.cn/posts/2018/2018-07-01-linux-softtool-setup/</link>
      <pubDate>Sun, 01 Jul 2018 22:25:54 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2018/2018-07-01-linux-softtool-setup/</guid>
      <description>Linux的软件安装，一般都需要借助于命令或者需要提前设置好库环境才行，没有Windows安装软件那么方便快捷，这也是Linux在桌面领域一直输于Windows的一个原因之一。
一、Linux软件发布形式 Linux软件主要有三种发布形式：
1.1 源码发布 直接源码压缩打包方式，后缀一般为tar.gz,tar.bz2,zip这类文件，这种源码包Linux/Unix各大平台都能支持安装。
1.2 发行版本自定义打包方式 发行版本自己定义的软件打包方式，如RedHat的RPM包，debian的deb包。
1.3 编译好的软件 厂商自己编译打包好的软件，直接赋予执行权限就可以执行的软件包。
二、Linux软件安装方式 根据软件发布方式的不同，安装方法也不同，主要有四种方法：</description>
    </item>
    
    <item>
      <title>一次MySQL主备同步出错恢复</title>
      <link>http://itbing.cn/posts/2018/2018-05-31-mysql-sync-error/</link>
      <pubDate>Thu, 31 May 2018 22:36:10 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2018/2018-05-31-mysql-sync-error/</guid>
      <description>错误提示：
Last_IO_Errno: 1236 Last_IO_Error: Got fatal error 1236 from master when reading data from binary log: &amp;#39;Client requested master to start replication from position &amp;gt; file size; the first event &amp;#39;mysql-bin.</description>
    </item>
    
    <item>
      <title>[MySQL错误]Can&#39;t find file: ./mysql/plugin.frm</title>
      <link>http://itbing.cn/posts/2018/2018-05-31-mysql-cant-find-file/</link>
      <pubDate>Thu, 31 May 2018 00:17:33 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2018/2018-05-31-mysql-cant-find-file/</guid>
      <description>错误提示：
/usr/libexec/mysqld: Can&amp;#39;t find file: &amp;#39;./mysql/plugin.frm&amp;#39; (errno: 13) 180530 15:19:43 [ERROR] Can&amp;#39;t open the mysql.</description>
    </item>
    
    <item>
      <title>恢复已销毁的 ZFS 存储池</title>
      <link>http://itbing.cn/posts/2017/2017-08-30-solaris-zfs/</link>
      <pubDate>Wed, 30 Aug 2017 20:58:45 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2017/2017-08-30-solaris-zfs/</guid>
      <description>同事发个消息给我，说大事不好了，他用zpool destroy命令把盘销毁了，但是现在突然发现里面还有东西，又想恢复。
我说别慌，冷静，我有一招，马上能恢复。
祭出神命令
#zpool import -D 可以查看哪些盘被销毁了，盘的状态怎么样，能不能恢复 pool: backup id: 5154272182900538157 state: ONLINE (DESTROYED) action: The pool can be imported using its name or numeric identifier.</description>
    </item>
    
    <item>
      <title>Linux下杀毒软件clamav的安装和使用</title>
      <link>http://itbing.cn/posts/2017/2015-06-31-clamav/</link>
      <pubDate>Fri, 30 Jun 2017 17:07:19 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2017/2015-06-31-clamav/</guid>
      <description>最近发现有台服务器中毒了，手动去查杀总是会有遗漏，最后安装了Linux下的杀毒软件clamav，使用起来还是不错的。
环境： Linux 6.8
版本： clamav-0.99.2.tar.gz
依赖关系： yum install pcre* zlib zlib-devel libssl-devel libssl openssl version 0.</description>
    </item>
    
    <item>
      <title>do_ypcall: clnt_call: RPC: Unable to send; errno = Operation not permitted</title>
      <link>http://itbing.cn/posts/2017/2017-05-31-ypbind-do_ypcall/</link>
      <pubDate>Wed, 31 May 2017 12:57:22 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2017/2017-05-31-ypbind-do_ypcall/</guid>
      <description>系统环境： Oracle Linux 5.8
操作过程： 应同事需求，想对一台服务器做IP限制，让它只能访问某几个IP。 用iptables做output限制
如限制只能访问192.168.0.9 #iptables -I OUTPUT -d 192.168.0.9 -j ACCEPT 前面有做所有DROP</description>
    </item>
    
    <item>
      <title>InfluxDB 1.2.0安装及新旧版本的注意事项</title>
      <link>http://itbing.cn/posts/2017/2017-01-30-influxdb/</link>
      <pubDate>Mon, 30 Jan 2017 16:35:33 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2017/2017-01-30-influxdb/</guid>
      <description>随着大数据的爆发，系统数量也是直线上升，监控系统，收集系统运行状态成了保障业务正常运行中的重要一个环节。
针对这种产生频率快、带时间标签、测点多、信息量大的数据，时序数据库(Time Series Database,简称TSDB)应运而生。而其中InfluxDB是比较应用广泛的其中一个。
InfluxDB是用Go语言写的，专为时间序列数据持久化所开发的，由于使用Go语言，所以各平台基本都支持。类似的时间序列数据库还有OpenTSDB，Prometheus等。
InfluxDB的Cluster功能收费，单机功能免费使用。
1、安装 可以直接rpm安装 到http://repos.influxdata.com下载相应的版本
#wget https://repos.influxdata.com/rhel/6Server/x86_64/stable/influxdb-1.2.0.x86_64.rpm #rpm -ivh influxdb-1.2.0.x86_64.rpm 或者 添加yum 源安装</description>
    </item>
    
    <item>
      <title>NTP服务被利用做流量攻击以及检测预防手段</title>
      <link>http://itbing.cn/posts/2016/2016-06-13-linux-ntp-attack/</link>
      <pubDate>Mon, 13 Jun 2016 14:18:24 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2016/2016-06-13-linux-ntp-attack/</guid>
      <description>被攻击服务器相关配置： ip: eth0: 172.28.9.2 eth1: 192.168.0.2 eth3: 外网IP
某一天发现这台WEB服务器流量一直很高。 开始一直以为是WEB服务的流量很高，根本没往NTP服务那方面想。 因为我设置NTP服务的时候就有考虑到安全问题。
检测过程： #dstat -N eth3</description>
    </item>
    
    <item>
      <title>用tar备份和恢复Linux操作系统</title>
      <link>http://itbing.cn/posts/2016/2016-04-14-linux-tar-backup/</link>
      <pubDate>Thu, 14 Apr 2016 15:58:58 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2016/2016-04-14-linux-tar-backup/</guid>
      <description>环境：主要是针对redhat等系列系统
其实备份系统平时看来可能用处不大，因为一般平时无论是数据库，还是应用，都会做自己的备份。实在系统坏了，也可以重装，重新配置就行。
但是有些系统可能用了很久，中间转了好几个人，里面的配置可能后来的人都搞不清楚了，重新配置需要花费很大精力。这个时候系统的备份就显得非常重要了。
或者有时候一小心删除了某个目录也可以用备份恢复。 备份系统应有选择性的备份某些服务器系统，或某些重要的系统文件，不用全部服务器做备份。 可以专门准备一个服务器或空间，根据服务器IP创建目录，再根据日期来存放tar好的各服务器的备份文件。
备份： 一般LINUX分区至少分三个： 一个/boot分区 一个/根分区 一个/swap交换分区 我们以这个为基础来实施备份策略。
/boot分区安装系统后一般不会变动，所以安装完系统后就可以备份一份，以后如果有升级系统，可以再备份
#tar -zcpf /boot.</description>
    </item>
    
    <item>
      <title>[故障分析]出现大量僵尸进程（zombie)</title>
      <link>http://itbing.cn/posts/2016/2016-03-08-failure-analysis-zombie/</link>
      <pubDate>Tue, 08 Mar 2016 10:49:11 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2016/2016-03-08-failure-analysis-zombie/</guid>
      <description>环境：SUSE Linux Enterprise Server 11 SP2
检测到一个suse系统的zombie达到100多个
登录服务器检测
首先查询是哪个进程引起的 ps -ef|grep defu sfhadm 7444 7443 0 02:10 ?</description>
    </item>
    
    <item>
      <title>用lshell实现堡垒机(跳转机)功能</title>
      <link>http://itbing.cn/posts/2016/2016-03-04-math-float/</link>
      <pubDate>Fri, 04 Mar 2016 20:42:00 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2016/2016-03-04-math-float/</guid>
      <description>写一下怎么利用lshell这个工具把一台Linux系统变成一台堡垒机（跳转机）。
一、跳转机的基本功能 1、多用户权限管理 2、限制登录用户所处的目录 3、限制登录用户能使用的命令 4、记录登录用户执行的命令
基本上在堡垒机上只要能执行ls、scp、ssh、passwd等几个命令就行。
准备一台Linux服务器安装lshell工具，添加受限用户组和用户，设置好能执行的命令，做为堡垒机使用，然后在其它服务器上在/etc/hosts.allow中设置只能从这台堡垒机服务器上远程登录。
二、安装和启用lshell 2.1、安装Linux系统 可以安装一个最简单的CentOS系统，多余的东西都不要安装，后面需要什么再安装什么。 安装完，可以加强这台服务器的安全设置，可以禁用或删除各种不需要的服务、文件。 开防火墙 开SELinux
2.2 安装lshell工具 如果堡垒机没有联网，可以从别的地方下载安装文件，再复制过来。 文章后有提供下载地址。 如果是CentOS7，需要先安装一下依赖软件</description>
    </item>
    
    <item>
      <title>在Linux下限制远程用户登陆的来源IP</title>
      <link>http://itbing.cn/posts/2015/2015-12-31-ip-limit/</link>
      <pubDate>Thu, 31 Dec 2015 15:41:26 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2015/2015-12-31-ip-limit/</guid>
      <description>一、前言 二、通过tcp_wrappers限制 三、通过防火墙限制 四、通过ssh配置限制 五、通过pam机制限制
一、前言 为了系统安全，我们经常对Linux服务器做设置，限制远程登录的来源IP，只允许我们信任的IP进行访问。 今天要讲的几种限制IP的方法，其中“通过tcp_wrappers限制”和“通过防火墙限制”只能通过IP进行限制，就是所有用户都得遵循这个限制。而“通过ssh配置限制”和“通过pam机制限制”可以根据用户名分别来进行IP的限制。
二、通过tcp_wrappers限制 这种方法有比较大的局限性，只能针对一些针对tcp_wrappers的服务进行限制。而SSH登录服务是刚好支持的。 这种方法就是配置文件/etc/hosts.deny和/etc/hosts.allow。
先编辑/etc/hosts.allow，先把允许要登录的IP或者IP段添加进去。
sshd: 192.168.0.2 172.</description>
    </item>
    
    <item>
      <title>批量管理服务器的几种方法</title>
      <link>http://itbing.cn/posts/2015/2015-12-20-linux-expect-sshpass/</link>
      <pubDate>Sun, 20 Dec 2015 23:05:17 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2015/2015-12-20-linux-expect-sshpass/</guid>
      <description>一、shell+expect 二、shell+sshpass 三、ansible、Puppet、SaltStack&amp;hellip; 四、堡垒机系统 五、一些运维系统 </description>
    </item>
    
    <item>
      <title>fdisk、parted无损调整普通分区大小</title>
      <link>http://itbing.cn/posts/2015/2015-12-11-linux-fdisk-parted/</link>
      <pubDate>Fri, 11 Dec 2015 15:52:50 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2015/2015-12-11-linux-fdisk-parted/</guid>
      <description>环境：oracle linux 6.4
#fdisk -v fdisk (util-linux-ng 2.17.2) #parted -v parted (GNU parted) 2.1 我们讲的调整分区大小，都是要保证不损坏分区中数据为前提。 这里我们讲一下用fdisk、parted调整普通分区的方法。 LVM卷组的就不讲了，这个一般比较简单。</description>
    </item>
    
    <item>
      <title>经验之谈：Linux运维工程师所需技能</title>
      <link>http://itbing.cn/posts/2015/2015-11-02-linux-devops-skill/</link>
      <pubDate>Mon, 02 Nov 2015 15:10:27 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2015/2015-11-02-linux-devops-skill/</guid>
      <description>以自己有限的经验说说作为一名合格的Linux运维工程师需要掌握的东西：
1、选择版本 现在发行版本已经让人有点眼花缭乱了。但是架构和底层的东西都是一样的，只是各自会有一些自己特有的工具。 LINUX:CentOS、Red Hat、Oracle Linux、Debian、Ubuntu、SUSE 只要玩转精通一类，基本上就可以了。有空再去玩玩其它的发行版本。Unix版本也要学学。 UNIX:Oracle Solaris、IBM AIX、HP-UX、FreeBSD 在熟悉之前可以多安装系统，了解系统安装的每个步骤，自定义选择组件安装。
注：Unix系统现在慢慢被淘汰掉了，比如Solaris就不再更新了。(2023.2.8更新） 由于CentOS8开始更新规则变化，很多人开始不用CentOS了，所以Debian现在最好也要掌握
2、系统基础 要去了解和理解跟WIN不一样的思想，彻底改变固定的思维，如 开源的思想和本质 一切皆文件 根目录结构 根目录下每个文件存放什么文件 挂载分区 安装软件 源码编译安装软件 系统上各种服务的功能</description>
    </item>
    
    <item>
      <title>文本模式下录制、回放和共享操作记录(script、scriptreplay、mkfifo)的妙用</title>
      <link>http://itbing.cn/posts/2015/2015-10-31-history-script-scriptreplay-mkfifo/</link>
      <pubDate>Sat, 31 Oct 2015 15:05:44 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2015/2015-10-31-history-script-scriptreplay-mkfifo/</guid>
      <description>环境：redhat 6.4 工具：script、scriptreplay、mkfifo
在redhat 6中自动带有scriptreplay指令，在redhat5中没有该指令，需要手动安装 从ftp://ftp.kernel.org/pub/linux/utils/util-linux/v2.14/下载util-linux-ng-2.14.1.tar.gz 从http://rpm.pbone.net中下载util-linux-2.13-0.44.el5.x86_64.rpm 安装rpm包 #rpm -ivh util-linux-2.13-0.44.el5.x86_64.rpm 解压util-linux-ng-2.14.1.tar.gz #tar zxvf util-linux-ng-2.</description>
    </item>
    
    <item>
      <title>多种方法实时记录历史命令</title>
      <link>http://itbing.cn/posts/2015/2015-10-31-history-command-record/</link>
      <pubDate>Sat, 31 Oct 2015 11:14:25 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2015/2015-10-31-history-command-record/</guid>
      <description>环境：Redhat 6.4
方法1： 实时记录历史命令到.bash_history
[root@itbing~]#vim /etc/bashrc export HISTTIMEFORMAT=&amp;#39;%F %T &amp;#39; #让历史命令记录操作时间 export HISTSIZE=1000000 #设置保存历史命令条数 export HISTFILESIZE=1000000 #设置保存历史命令的文件大小 shopt -s histappend PROMPT_COMMAND=&amp;#39;history -a&amp;#39; #实时记录历史命令，防止丢失 优点：简单方便，易设置 缺点：安全性较差，多用户下，只能分别记录到各自的.</description>
    </item>
    
    <item>
      <title>生产上Ntp Server的研究与配置</title>
      <link>http://itbing.cn/posts/2015/2015-10-30-ntp-server-conf/</link>
      <pubDate>Fri, 30 Oct 2015 21:05:43 +0800</pubDate>
      
      <guid>http://itbing.cn/posts/2015/2015-10-30-ntp-server-conf/</guid>
      <description>###推荐使用的NTP服务器：http://www.pool.ntp.org/zone/cn
time.pool.aliyun.com cn.pool.ntp.org 2.cn.pool.ntp.org s1a.time.edu.cn s2c.time.edu.cn s2m.time.edu.cn time.asia.apple.com 1.asia.pool.ntp.org 3.asia.pool.ntp.org #加两个IP的，防止DNS域名解析有问题 202.112.10.60 202.112.10.36 有的可能是集群，一个域名后面有很多服务器。可以通过ntpdate -q cn.</description>
    </item>
    
  </channel>
</rss>
